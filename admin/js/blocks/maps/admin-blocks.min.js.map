{"version":3,"sources":["admin-metablock.js","admin-select2.js"],"names":["MetaBlock","shortcode_tag","required_image","me","this","add_btn_class","remove_btn_class","render_new","element_map","get_element_map","buttons","make_buttons","element_count","$","append","hide_all_elements","add_click_event_handlers","render_edit","element_types","inactive_elements","all_elements","get_element_map_array","active_elements","forEach","element_id","$element","filter","input_values","children","map","idx","elem","val","get","join","$preview_images","find","length","push","el","includes","max_row","Math","max","apply","parseInt","match","parent","data","removeAttr","prop","trigger","hide","attr","toggle_images","elements","on","event","preventDefault","selectName","currentTarget","row","element_type","select2","placeholder","show_element","hide_element","off","show","each","animate","scrollTop","element_is_visible","is","block_style_allows_images","toggle","toArray","item","pos","indexOf","element_names","closest","arr","Array","_","i","x","reduce","y","concat","btn_HTML","types","names","type","jQuery","document","ready","allowed_shortcodes","wp","shortcake","hooks","addAction","shortcode","redefineSelectData","addOldData","$select","$list","k","v","$item","eq","id","_$select$data","$container","MutationObserver","observe","childList","subtree"],"mappings":"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","file":"../admin-blocks.min.js","sourcesContent":["/* eslint no-console: [\"error\", { allow: [\"log\", \"warn\", \"error\"] }] */\n/* global wp */\n\nfunction MetaBlock(shortcode_tag, required_image) { // eslint-disable-line no-unused-vars\n\n  var me = this;\n  me.shortcode_tag = shortcode_tag;\n  me.add_btn_class  = me.shortcode_tag + '-add-element';\n  me.remove_btn_class  = me.shortcode_tag + '-remove-element';\n  me.required_image = required_image || false;\n\n\n  /**\n   * Called when a new metablock is rendered in the backend.\n   * @param shortcode Shortcake backbone model.\n   */\n  me.render_new = function () {\n    var element_map = me.get_element_map();\n    var buttons = me.make_buttons(element_map);\n    var $shortcode_div = $('.shortcode-ui-edit-' + me.shortcode_tag);\n    $shortcode_div.append(buttons);\n    var element_count = element_map.element_count;\n    this.hide_all_elements(element_count);\n    this.add_click_event_handlers(element_count);\n  };\n\n  /**\n   * Called when en existing metablock is rendered in the backend.\n   * @param shortcode Shortcake backbone model.\n   */\n  me.render_edit = function () {\n\n    var element_map = me.get_element_map();\n    var element_types = element_map.element_types;\n    var element_count = element_map.element_count;\n\n    var buttons = me.make_buttons(element_map);\n    var $shortcode_div = $('.shortcode-ui-edit-' + me.shortcode_tag);\n    $shortcode_div.append(buttons);\n\n    var inactive_elements = [];\n    var all_elements = me.get_element_map_array(element_count, element_types);\n    all_elements.forEach(function (element_id) {\n      var $element = $('.field-block')\n        .filter($('div[class$=\\'_' + element_id + '\\']'));\n      var input_values = $element\n        .children()\n        .filter($('input, textarea, select'))\n        .map(function (idx, elem) {\n          return $(elem).val();\n        }).get().join('');\n      var $preview_images = me.required_image ? $element.find('.attachment-previews .attachment-preview') : null;\n      if ('' === input_values && (!me.required_image || $preview_images.length == 0)) {\n        inactive_elements.push(element_id);\n      }\n    });\n\n    var active_elements = all_elements.filter(function(el) {\n      return !inactive_elements.includes(el);\n    });\n\n    var max_row = active_elements.length === 0 ? 0 :\n      Math.max.apply(null, active_elements.map(function(el) {\n        return parseInt(el.match(/\\d+$/g)[0]);\n      }));\n\n    $('.' + me.add_btn_class).parent().data('row', max_row);\n    max_row !== 0 && $('.' + me.remove_btn_class).removeAttr('disabled');\n\n    inactive_elements.map(function(element_id) {\n      var $element = $('.field-block').filter($('div[class$=\\'_' + element_id + '\\']'));\n      $element.find('input[type=\"checkbox\"], input[type=\"radio\"]').prop('checked', false).trigger('change');\n      $element.hide();\n    });\n\n    if (all_elements.length - inactive_elements.length === element_count) {\n      $('.' + me.add_btn_class).attr('disabled', 'disabled');\n    }\n\n    this.toggle_images(element_count);\n    this.add_click_event_handlers(element_count);\n  };\n\n  /**\n   * Add click event handlers for add/remove buttons in metablock.\n   */\n  me.add_click_event_handlers = function (element_count) {\n    var elements = this;\n\n    // Add click event handlers for the elements.\n    $('.' + me.add_btn_class).on('click', function (event) {\n      event.preventDefault();\n      var $element = $(event.currentTarget);\n      var row = $element.parent().data('row');\n      var element_type = $element.data('element-type');\n\n      // Special control, if block type added is post, and if input element has special data attribute data-input-transform == js-select2-enable then dynamically transform into select2\n      if (element_type == 'post') {\n        var selectName = 'select[name=\"post_post_'+ (row+1) +'\"]';\n        if ( $(selectName).data('input-transform') === 'js-select2-enable' ) {\n          $(selectName).select2({\n            placeholder: 'Select post',\n          });\n        }\n      }\n\n      if (row <= element_count) {\n        // elements.show_element_type_selector();\n        elements.show_element(++row, element_type, element_count);\n        $element.parent().data('row', row);\n        $('.' + me.remove_btn_class).removeAttr('disabled');\n        if (row === element_count) {\n          $('.' + me.add_btn_class).attr('disabled', 'disabled');\n        }\n      }\n    });\n\n    $('.' + me.remove_btn_class).on('click', function (event) {\n      event.preventDefault();\n      var $element = $(event.currentTarget);\n      var row = $element.parent().data('row');\n\n      if (row >= 0) {\n        elements.hide_element(row--);\n        $element.parent().data('row', row);\n        $('.' + me.add_btn_class).removeAttr('disabled');\n        if (row === 0) {\n          $element.attr('disabled', 'disabled');\n        }\n      }\n    });\n\n    $('input[name=elements_block_style]').off('click').on('click', function() {\n      me.toggle_images(element_count);\n    });\n  };\n\n  /**\n   * Hide a metablock row and reset the values of it's fields.\n   *\n   * @param row\n   */\n  me.hide_element = function (row) {\n    var $element = $('.field-block').filter($('div[class$=\\'_' + row + '\\']'));\n    // Disable all text, textarea fields for this row/element.\n    $element.find('input[type=\"checkbox\"], input[type=\"radio\"]').prop('checked', false).trigger('change');\n    $element.find('input:not([type=\"checkbox\"]):not([type=\"radio\"]), textarea').val('').trigger('input').trigger('change');\n    if(me.required_image) {\n      $element.find('.attachment-previews .attachment-preview .button.remove').trigger('click');\n    }\n    $element.hide(300);\n  };\n\n  /**\n   * Hide all metablock rows.\n   *\n   * @param row\n   */\n  me.hide_all_elements = function (element_count) {\n    me.get_element_map_array(element_count).forEach(function (row) {\n      var $element = $('.field-block').filter($('div[class$=\\'_' + row + '\\']'));\n      $element.find('input[type=\"checkbox\"], input[type=\"radio\"]').prop('checked', false).trigger('change');\n      $element.hide();\n    });\n  };\n\n  /**\n   * Show a metablock elements selector and scroll to bottom.\n   *\n   * @param row\n   */\n  me.show_element = function (row, element_type, element_count) {\n    $('.field-block').filter($('div[class$=\\'_' + element_type + '_' +row + '\\']')).show(300, function () {\n      $(this).find('input[type=\"checkbox\"][checked], input[type=\"radio\"][checked]').each(function() {\n        $(this).prop('checked', true).trigger('change');\n      });\n      me.toggle_images(element_count);\n      $('.media-frame-content').animate({\n        scrollTop: $('.shortcode-ui-content').prop('scrollHeight'),\n      }, 300);\n    });\n  };\n\n  /**\n   * Show/hide images inputs depending on element block style.\n   */\n  me.toggle_images = function(element_count) {\n    me.get_element_map_array(element_count).forEach(function(row) {\n      var element_is_visible = $('.field-block').filter($('div[class$=\\'title_' + row + '\\']')).is(':visible');\n      var block_style_allows_images = 'no_image' != $('input[name=elements_block_style]:checked').val();\n      $('.shortcode-ui-attribute-attachment_'+ row).toggle(element_is_visible && block_style_allows_images);\n    });\n  };\n\n  /**\n   * Called when a new metablock is rendered in the backend.\n   * @param shortcode Shortcake backbone model.\n   */\n  me.get_element_map = function() {\n\n    var element_types = $('[data-element-type]')\n      .map( function() {\n        return $(this).data('element-type');\n      }).toArray();\n    element_types = element_types.filter(function(item, pos) {\n      return element_types.indexOf(item) == pos;\n    });\n\n    var element_names = $('[data-element-name]')\n      .map( function() {\n        return $(this).data('element-name');\n      }).toArray();\n    element_names = element_names.filter(function(item, pos) {\n      return element_names.indexOf(item) == pos;\n    });\n\n    var element_count = $('[data-element-number]')\n      .map( function() {\n        return $(this).data('element-number');\n      }).toArray();\n    element_count = Math.max.apply(null, element_count);\n\n    $('[data-hidden]').each(function() {\n      $(this).closest('.field-block').parent('div').hide();\n    });\n\n    return {\n      element_types: element_types,\n      element_names: element_names,\n      element_count: element_count\n    };\n\n  };\n\n  me.get_element_map_array = function(element_count, element_types) {\n    var arr = Array.apply(null, Array(element_count));\n    arr = arr.map(function (_, i) { return i + 1; });\n    if(element_types) {\n      arr = arr\n        .map(function(x) {\n          return element_types\n            .map(function(el) {\n              return el + '_' + x;\n            }, []);})\n        .reduce(function(x, y) {\n          return x.concat(y);\n        });\n    }\n    return arr;\n  };\n\n  /**\n   * Called when a new metablock is rendered in the backend.\n   * @param shortcode Shortcake backbone model.\n   */\n  me.make_buttons = function(element_map) {\n    var btn_HTML = '<div data-row=\"0\">';\n    var types = element_map.element_types;\n    var names = element_map.element_names;\n    if( names.length !== types.length ) { names = types; }\n    types.map( function(type, idx) {\n      btn_HTML += (\n        '<button class=\"button button-small ' + me.add_btn_class + '\" data-element-type=\"' + type + '\">Add ' + names[idx] + '</button>'\n      );\n    });\n    btn_HTML += '<button class=\"button button-small ' + me.remove_btn_class + '\" disabled=\"disabled\">Remove Element</button></div>';\n    return btn_HTML;\n  };\n\n}\n\n\njQuery(document).ready(function() {\n\n  var allowed_shortcodes = [\n    'shortcake_metablock',\n    'shortcake_mixed_content_row',\n    'shortcake_repeater',\n    'shortcake_milestones',\n    'shortcake_slideshow',\n    'shortcake_world_slideshow',\n    'shortcake_link_list',\n    'shortcake_people_list',\n    'shortcake_accordion_list',\n    'shortcake_launcher_card',\n    'shortcake_grid_images',\n    'shortcake_hero_set', // 1st\n    'shortcake_hero_set_donation', // 1st with donation module\n    'shortcake_steps_set', // 2nd\n    'shortcake_geography_set', // 3rd\n    // 'shortcake_get_involved_cards', // 4th (bottom)\n    'shortcake_infographic_cards', // 5th (bottom)\n    'shortcake_testimony', // 6th\n    'shortcake_mc_subscription', // 7th\n  ];\n\n  var required_image = [\n    'shortcake_grid_images',\n    'shortcake_hero_set',\n    'shortcake_hero_set_donation',\n    'shortcake_steps_set',\n    'shortcake_infographic_cards',\n    'shortcake_testimony'\n  ];\n\n  // Attach hooks when rendering a new metablock.\n  wp.shortcake.hooks.addAction('shortcode-ui.render_new', function (shortcode) {\n    var shortcode_tag = shortcode.get('shortcode_tag');\n    if(allowed_shortcodes.includes(shortcode_tag)) {\n      var mb = new MetaBlock(shortcode_tag, required_image.includes(shortcode_tag));\n      mb.render_new();\n    }\n  });\n\n  // Trigger hooks when shortcode renders an existing metablock.\n  wp.shortcake.hooks.addAction('shortcode-ui.render_edit', function (shortcode) {\n    var shortcode_tag = shortcode.get('shortcode_tag');\n    if(allowed_shortcodes.includes(shortcode_tag)) {\n      var mb = new MetaBlock(shortcode_tag, required_image.includes(shortcode_tag));\n      mb.render_edit();\n    }\n  });\n\n});\n","/* eslint no-console: [\"error\", { allow: [\"log\", \"warn\", \"error\"] }] */\n/* global wp */\n\njQuery(document).ready(function() {\n\n    function redefineSelectData(shortcode) {\n        function addOldData($select, $list) {\n            $select.find('option[data-select2-id]').each(function(k, v) {\n                const $item = $list.find('.select2-selection__choice').eq(k);\n                if(!$item || $item.data('data')) {\n                    return true;\n                }\n                $item.data('data', {\n                    id: $(this).attr('value')\n                });\n            });\n        }\n        $('.shortcode-ui-field-post-select select').each(function() {\n            const $select = $(this);\n            const $list = $select.data('select2')?.$container;\n            if(!$list) {\n                return true;\n            }\n            addOldData($select, $list);\n            const observer = new MutationObserver(function() {\n                addOldData($select, $list);\n            });\n            observer.observe($list.get(0), { childList: true, subtree: true });\n        });\n    }\n\n    wp.shortcake.hooks.addAction('shortcode-ui.render_new', function (shortcode) {\n        redefineSelectData(shortcode);\n    });\n    wp.shortcake.hooks.addAction('shortcode-ui.render_edit', function (shortcode) {\n        redefineSelectData(shortcode);\n    });\n\n});\n"]}