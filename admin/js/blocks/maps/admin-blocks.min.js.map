{"version":3,"sources":["admin-metablock.js","admin-test.js"],"names":["MetaBlock","shortcode_tag","me","this","add_btn_class","remove_btn_class","render_new","element_map","get_element_map","buttons","make_buttons","$","append","element_count","hide_all_elements","add_click_event_handlers","render_edit","element_types","inactive_elements","all_elements","get_element_map_array","forEach","element_id","filter","children","map","idx","elem","val","get","join","push","active_elements","el","includes","max_row","length","Math","max","apply","parseInt","match","parent","data","removeAttr","hide","attr","toggle_images","elements","on","event","preventDefault","$element","currentTarget","row","element_type","show_element","hide_element","off","each","index","element","trigger","find","click","show","animate","scrollTop","prop","element_is_visible","is","block_style_allows_images","toggle","toArray","item","pos","indexOf","element_names","arr","Array","_","i","x","reduce","y","concat","btn_HTML","types","names","type","jQuery","document","ready","allowed_shortcodes","wp","shortcake","hooks","addAction","shortcode"],"mappings":"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","file":"../admin-blocks.min.js","sourcesContent":["/* global wp */\n\nfunction MetaBlock(shortcode_tag) { // eslint-disable-line no-unused-vars\n\n  var me = this;\n  me.shortcode_tag = shortcode_tag;\n  me.add_btn_class  = me.shortcode_tag + '-add-element';\n  me.remove_btn_class  = me.shortcode_tag + '-remove-element';\n\n\n  /**\n   * Called when a new metablock is rendered in the backend.\n   * @param shortcode Shortcake backbone model.\n   */\n  me.render_new = function () {\n    var element_map = me.get_element_map();\n    var buttons = me.make_buttons(element_map);\n    var $shortcode_div = $('.shortcode-ui-edit-' + me.shortcode_tag);\n    $shortcode_div.append(buttons);\n    var element_count = element_map.element_count;\n    this.hide_all_elements(element_count);\n    this.add_click_event_handlers(element_count);\n  };\n\n  /**\n   * Called when en existing metablock is rendered in the backend.\n   * @param shortcode Shortcake backbone model.\n   */\n  me.render_edit = function () {\n\n    var element_map = me.get_element_map();\n    var element_types = element_map.element_types;\n    var element_count = element_map.element_count;\n\n    var buttons = me.make_buttons(element_map);\n    var $shortcode_div = $('.shortcode-ui-edit-' + me.shortcode_tag);\n    $shortcode_div.append(buttons);\n\n    var inactive_elements = [];\n    var all_elements = me.get_element_map_array(element_count, element_types);\n    all_elements.forEach(function (element_id) {\n        var input_values = $('.field-block')\n            .filter($('div[class$=\\'_' + element_id + '\\']'))\n            .children()\n            .filter($('input, textarea, select'))\n            .map(function (idx, elem) {\n              return $(elem).val();\n            }).get().join('');\n\n        if ('' === input_values) {\n          inactive_elements.push(element_id);\n        }\n    });\n\n    var active_elements = all_elements.filter(function(el) {\n      return !inactive_elements.includes(el);\n    });\n\n    var max_row = active_elements.length === 0 ? 0 :\n        Math.max.apply(null, active_elements.map(function(el) {\n          return parseInt(el.match(/\\d+$/g)[0]);\n        }));\n\n    $('.' + me.add_btn_class).parent().data('row', max_row);\n    max_row !== 0 && $('.' + me.remove_btn_class).removeAttr('disabled');\n\n    inactive_elements.map(function(element_id) {\n      $('.field-block').filter($('div[class$=\\'_' + element_id + '\\']')).hide();\n    });\n\n    if (all_elements.length - inactive_elements.length === element_count) {\n      $('.' + me.add_btn_class).attr('disabled', 'disabled');\n    }\n\n    this.toggle_images(element_count);\n    this.add_click_event_handlers(element_count);\n  };\n\n  /**\n   * Add click event handlers for add/remove buttons in metablock.\n   */\n  me.add_click_event_handlers = function (element_count) {\n    var elements = this;\n\n    // Add click event handlers for the elements.\n    $('.' + me.add_btn_class).on('click', function (event) {\n      event.preventDefault();\n      var $element = $(event.currentTarget);\n      var row = $element.parent().data('row');\n      var element_type = $element.data('element-type');\n\n      if (row <= element_count) {\n        // elements.show_element_type_selector();\n        elements.show_element(++row, element_type, element_count);\n        $element.parent().data('row', row);\n        $('.' + me.remove_btn_class).removeAttr('disabled');\n        if (row === element_count) {\n          $('.' + me.add_btn_class).attr('disabled', 'disabled');\n        }\n      }\n    });\n\n    $('.' + me.remove_btn_class).on('click', function (event) {\n      event.preventDefault();\n      var $element = $(event.currentTarget);\n      var row = $element.parent().data('row');\n\n      if (row >= 0) {\n        elements.hide_element(row--);\n        $element.parent().data('row', row);\n        $('.' + me.add_btn_class).removeAttr('disabled');\n        if (row === 0) {\n          $element.attr('disabled', 'disabled');\n        }\n      }\n    });\n\n    $('input[name=elements_block_style]').off('click').on('click', function() {\n      me.toggle_images(element_count);\n    });\n  };\n\n  /**\n   * Hide a metablock row and reset the values of it's fields.\n   *\n   * @param row\n   */\n  me.hide_element = function (row) {\n    var $element = $('.field-block').filter($('div[class$=\\'_' + row + '\\']'));\n    // Clear all text, textarea fields for this row/element.\n    $element.\n      children().\n      filter($('input, textarea')).each(function (index, element) {\n        $(element).val('').trigger('input');\n      });\n    // Clear image attachment if set in this row/element.\n    $element.\n      find($('.attachment-previews .remove')).each(function (index, element) {\n        $(element).click();\n      });\n    // Hide element's fields.\n    $element.hide(300);\n  };\n\n  /**\n   * Hide all metablock rows.\n   *\n   * @param row\n   */\n  me.hide_all_elements = function (element_count) {\n    me.get_element_map_array(element_count).forEach(function (row) {\n      $( '.field-block' ).filter( $( 'div[class$=\\'_'+row+'\\']' ) ).hide();\n    });\n  };\n\n  /**\n   * Show a metablock elements selector and scroll to bottom.\n   *\n   * @param row\n   */\n  me.show_element = function (row, element_type, element_count) {\n    $('.field-block').filter($('div[class$=\\'_' + element_type + '_' +row + '\\']')).show(300, function () {\n      me.toggle_images(element_count);\n      $('.media-frame-content').animate({\n        scrollTop: $('.shortcode-ui-content').prop('scrollHeight'),\n      }, 300);\n    });\n  };\n\n  /**\n   * Show/hide images inputs depending on element block style.\n   */\n  me.toggle_images = function(element_count) {\n    me.get_element_map_array(element_count).forEach(function(row) {\n      var element_is_visible = $('.field-block').filter($('div[class$=\\'title_' + row + '\\']')).is(':visible');\n      var block_style_allows_images = 'no_image' != $('input[name=elements_block_style]:checked').val();\n      $('.shortcode-ui-attribute-attachment_'+ row).toggle(element_is_visible && block_style_allows_images);\n    });\n  };\n\n  /**\n   * Called when a new metablock is rendered in the backend.\n   * @param shortcode Shortcake backbone model.\n   */\n  me.get_element_map = function() {\n\n    var element_types = $('[data-element-type]')\n      .map( function() {\n        return $(this).data('element-type');\n      }).toArray();\n    element_types = element_types.filter(function(item, pos) {\n      return element_types.indexOf(item) == pos;\n    });\n\n    var element_names = $('[data-element-name]')\n      .map( function() {\n        return $(this).data('element-name');\n      }).toArray();\n    element_names = element_names.filter(function(item, pos) {\n      return element_names.indexOf(item) == pos;\n    });\n\n    var element_count = $('[data-element-number]')\n      .map( function() {\n        return $(this).data('element-number');\n      }).toArray();\n    element_count = Math.max.apply(null, element_count); \n\n    return {\n      element_types: element_types,\n      element_names: element_names,\n      element_count: element_count\n    };\n\n  };\n\n  me.get_element_map_array = function(element_count, element_types) {\n    var arr = Array.apply(null, Array(element_count));\n    arr = arr.map(function (_, i) { return i + 1; });\n    if(element_types) {\n      arr = arr\n        .map(function(x) {\n          return element_types\n            .map(function(el) {\n              return el + '_' + x;\n            }, []);})\n        .reduce(function(x, y) {\n          return x.concat(y);\n        });\n    }\n    return arr;\n  };\n\n  /**\n   * Called when a new metablock is rendered in the backend.\n   * @param shortcode Shortcake backbone model.\n   */\n  me.make_buttons = function(element_map) {\n    var btn_HTML = '<div data-row=\"0\">';\n    var types = element_map.element_types;\n    var names = element_map.element_names;\n    if( names.length !== types.length ) { names = types; }\n    types.map( function(type, idx) {\n      btn_HTML += (\n        '<button class=\"button button-small ' + me.add_btn_class + '\" data-element-type=\"' + type + '\">Add ' + names[idx] + '</button>'\n      );\n    });\n    btn_HTML += '<button class=\"button button-small ' + me.remove_btn_class + '\" disabled=\"disabled\">Remove Element</button></div>';\n    return btn_HTML;\n  };\n\n}\n\n\njQuery(document).ready(function() {\n\n  var allowed_shortcodes = [\n    'shortcake_metablock',\n    'shortcake_mixed_content_row',\n    'shortcake_repeater',\n    'shortcake_milestones',\n    'shortcake_world_slideshow',\n    'shortcake_mixed_content_slideshow',\n  ];\n\n  // Attach hooks when rendering a new metablock.\n  wp.shortcake.hooks.addAction('shortcode-ui.render_new', function (shortcode) {\n    var shortcode_tag = shortcode.get('shortcode_tag');\n    if(allowed_shortcodes.includes(shortcode_tag)) {\n      var mb = new MetaBlock(shortcode_tag);\n      mb.render_new();\n    }\n  });\n\n  // Trigger hooks when shortcode renders an existing metablock.\n  wp.shortcake.hooks.addAction('shortcode-ui.render_edit', function (shortcode) {\n    var shortcode_tag = shortcode.get('shortcode_tag');\n    if(allowed_shortcodes.includes(shortcode_tag)) {\n      var mb = new MetaBlock(shortcode_tag);\n      mb.render_edit();\n    }\n  });\n\n});\n","jQuery(document).ready(function() {\n  // console.log('TEST OK');\n});\n"]}