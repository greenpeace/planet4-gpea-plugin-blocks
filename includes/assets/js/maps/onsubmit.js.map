{"version":3,"sources":["onsubmit.js"],"names":["formObj","el","inputs","$","serializeArray","each","i","input","toggleDisable","value","element","prop","parent","parentNode","cardflip","nextElementSibling","card","find","toggle","css","flip_positionattribute","toggleClass","one","fireShareEvent","form_config","platform","dataLayer","push","event","conv_campaign","window","analytics_campaign","conv_action","ga_action","conv_label","console","log","socialBlueDeDuplicate","email","phone","apref","apHost","document","location","protocol","apSrc","script","getElementsByTagName","_apRef","append","unescape","err","createElement","type","getUrlVars","appendChild","vars","hash","hashes","href","split","slice","indexOf","length","on","petition_form_element","this","post_form_value","action","nonce","ad_campaign","url","data","ajaxUrl","success","fbq","jalt_track","clangct","undefined","dataType","ajax","jqXHR","textStatus","cardback","errorThrown","getFormObj"],"mappings":"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","file":"../onsubmit.js","sourcesContent":["$('.gpnl-petitionform').on('submit', function () {\n  var petition_form_element = this;\n  // Get the  parameter from the petition form and add the action and CSRF protection\n  var post_form_value = getFormObj(petition_form_element);\n  form_config = 'petition_form_object_' + post_form_value['form_id'];\n    \n  post_form_value.action = 'petition_form_process';\n  post_form_value.nonce  = window[form_config].nonce;\n  post_form_value.ad_campaign = window[form_config].ad_campaign;\n\n  // Disable the form so people can't resubmit\n  toggleDisable($(petition_form_element).find('*'));\n\n  // Do a ajax call to the wp_admin admin_ajax.php,\n  // which triggers processing function in the petition block\n  $.ajax({\n    type:    'POST',\n    url:     window[form_config].ajaxUrl,\n    data:    post_form_value,\n    success: function(data) {\n      console.log('^-^');\n\n      // Send conversion event to the GTM\n      if (typeof dataLayer !== 'undefined') {\n        dataLayer.push({\n          'event'         :'petitiebutton',\n          'conv_campaign' : window[form_config].analytics_campaign,\n          'conv_action'   : window[form_config].ga_action,\n          'conv_label'    :'registreer'\n        });\n      }\n\n      // if the consent was ticked or consent was given by entering phonenumber\n      if (post_form_value.consent === 'on' || post_form_value.phone !== '') {\n        // If an ad campaign is run by an external company fire the conversiontracking\n        if (window[form_config].ad_campaign === 'SB') {\n          fbq('track', 'Lead');\n          // if it is run by social blue, also deduplicate\n          socialBlueDeDuplicate(post_form_value['mail'], data['data']['phone'], window[form_config].apref);\n        } else if (window[form_config].ad_campaign === 'JA') {\n          fbq('track', window[form_config].jalt_track);\n        }\n      }\n\n      if (post_form_value.phone !== ''){\n        // Send conversion event to the GTM\n        if (typeof dataLayer !== 'undefined') {\n          dataLayer.push({\n            'event'         :'petitiebutton',\n            'conv_campaign' : window[form_config].analytics_campaign,\n            'conv_action'   :'telnr',\n            'conv_label'    :'Ja'\n          });\n        }\n      }\n      else{\n        if (typeof dataLayer !== 'undefined') {\n          dataLayer.push({\n            'event'         :'petitiebutton',\n            'conv_campaign' : window[form_config].analytics_campaign,\n            'conv_action'   :'telnr',\n            'conv_label'    :'Nee'\n          });\n        }\n      }\n\n      // cardflip the card, positionattribute flips to make sure no problems arises with different lengths of the front and back of the card, finally hide the front\n      cardflip(petition_form_element);\n\n      let clangct=getUrlVars()['clangct'];\n      if(clangct != undefined){\n        $.ajax({\n          url: '/wp-content/plugins/planet4-gpnl-plugin-blocks/includes/assets/js/clang-conversion.js?clangct='+clangct,\n          dataType: 'script',\n        });\n      }\n    },\n    error: function(jqXHR, textStatus, errorThrown){\n      // If the backend sends an error, hide the thank element and show an error urging to try again\n      console.log('o_o');\n      console.log('ERRORS: ' + textStatus + ': ' + errorThrown);\n      var cardback = $(petition_form_element.parentNode.nextElementSibling);\n      cardback.find('*').hide('');\n      cardback.append('<p>Sorry, er gaat momenteel iets fout, probeer het nu of later opnieuw.</p>');\n      cardback.append(\n        '<a href=\\''+window.location.href +'\\' class=\"btn btn-primary btn-block\"' +\n        '\">Probeer opnieuw</a>');\n      cardflip(petition_form_element);\n    }\n  });\n});\n\n// Get the key+value from the input fields in the form\nfunction getFormObj(el) {\n  var formObj = {};\n  var inputs = $(el).serializeArray();\n  $.each(inputs, function (i, input) {\n    formObj[input.name] = input.value;\n  });\n  return formObj;\n}\n\n// Toggle the disabled state on form elements\nfunction toggleDisable(el) {\n  el.prop('disabled', !el.prop('disabled'));\n\n}\n\n// toggle the flipped class for the card parent\nfunction cardflip(el) {\n  let element = $(el);\n  let parent =  el.parentNode;\n  let card = $(el.parentNode.parentNode);\n\n  // first hide the signing button\n  $(element.find('.signBtn')).toggle();\n  $(element.find('.policies')).toggle();\n  // then cardflip the position attribute on the front and back of the card to support different lengths front and back\n  $(parent.nextElementSibling).css( 'position', flip_positionattribute(parent.nextElementSibling));\n  $(parent).css( 'position', flip_positionattribute(parent));\n  // then cardflip the card\n  card.toggleClass('flipped');\n\n  // after animation hide the front\n  card.one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend',\n    function() {\n      $(parent).toggle();\n      card.off('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend');\n    });\n\n}\n\nfunction flip_positionattribute (el){\n  return $(el).css('position') === 'absolute' ? 'relative' : 'absolute';\n}\n\n/* eslint-disable */\nfunction fireShareEvent (platform){\n  if (typeof dataLayer !== 'undefined') {\n    dataLayer.push({\n      'event'         :'petitiebutton',\n      'conv_campaign' :window[form_config].analytics_campaign,\n      'conv_action'   :window[form_config].ga_action,\n      'conv_label'    :'share_' + platform});\n  }\n  else{\n    console.log('GTM not defined?');\n  }\n}\n/* eslint-enable */\n\n/* eslint-disable */\n// Send the supporter data to for deduplication\nfunction socialBlueDeDuplicate(email, phone, apref) {\n  var apHost = ('https:' == document.location.protocol ? 'https://secure.event.' : 'http://www.') + 'affiliatepartners.com';\n  var apSrc = '/js/ApConversionPixelV1.1.js';\n\n  _apOrderValue = 0;\n  _apOrderNumber = 'email=' + email + '-telefoonnumer=' + phone;\n  _apRef = apref;\n\n  try {\n    $('body').append(unescape('%3Cscript src=\\'' + apHost + apSrc + '\\' type=\\'text/javascript\\'%3E%3C/script%3E'));\n  } catch (err) {\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = apHost + apSrc;\n    document.getElementsByTagName('head')[0].appendChild(script);\n  }\n}\n/* eslint-enable */\n\n// REFACTOR IE11 doesn't support UrlSearchParams, so custom UrlParam function.\n// \tConsider polyfilling it now? or wait until we drop IE11 support and switch then?\nfunction getUrlVars(){\n  var vars = [],\n    hash;\n  var uri = window.location.href.split('#')[0];\n  var hashes = uri.slice(window.location.href.indexOf('?') + 1).split('&');\n  for(var i = 0; i < hashes.length; i++){\n    hash = hashes[i].split('=');\n    vars.push(hash[0]);\n    vars[hash[0]] = hash[1];\n  }\n  return vars;\n}\n"]}