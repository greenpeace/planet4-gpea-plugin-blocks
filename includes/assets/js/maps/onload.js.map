{"version":3,"sources":["onload.js"],"names":["getUrlVars","hash","vars","hashes","window","location","href","split","slice","indexOf","i","length","push","getFormObj","el","formObj","inputs","$","serializeArray","each","input","name","value","document","ready","opt","url_cg","isfacebook","referrer","istwitter","prefillByGuid","type","form","xmlhttp","XMLHttpRequest","query_id","requestValue","tellerCode","open","sr","onreadystatechange","readyState","status","response","responseXML","getElementsByTagName","firstChild","nodeValue","res","naam","find","val","email","num_responses","formwrapper","parentNode","counter_min","show","perc_slider","Math","round","counter_max","animate","width","opacity","html","toLocaleString","counter_text","fadeIn","showCounter","Number","setRequestHeader","send","undefined","hide","prop","keyup","test","this","mail","encodeURIComponent","ajax","url","complete","data","responseText","includes","form_config","analytics_campaign","countermin","countermax","countertext","success","error","toggle"],"mappings":"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","file":"../onload.js","sourcesContent":["$(document).ready(function() {\n\n  // Hide the consentbox if the opt=in url var is set. (this is for set for ie mailings)\n  var opt=getUrlVars()['opt'];\n  var url_cg = getUrlVars()['cg'];\n  var isfacebook = document.referrer.indexOf('facebook') !== -1;\n  var istwitter = document.referrer.indexOf('twitter') !== -1;\n\n  if(opt!= undefined && $('.optin').length != 0 && opt=='in'){\n    $('.optin').hide();\n    $('.gpnl-petition-checkbox').prop( 'checked', true );\n\n    // Here we check if we know the mail being entered if the opt=in var is set.\n    // If we don't know the entered mail we should display the consentbox\n    $( 'input[name=\\'mail\\']' ).keyup(function() {\n      // First loosely check if the value in the mailinput is indeed a mailadress, if it indeed is, we pass it onto the database checker\n      // eslint-disable-next-line\n      var mailRegex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n      if (mailRegex.test(this.value)) {\n        let mail = encodeURIComponent(this.value);\n        $.ajax({\n          type: 'GET',\n          url: 'https://secure.greenpeacephp.nl/kenikdeze.php?mail=' + mail,\n          complete: function(data) {\n            // If we do not know the email, we display the consentbox again\n            if (data.responseText.includes('false')) {\n              $('.optin').show();\n              $('.gpnl-petition-checkbox').prop( 'checked', false );\n            }\n          }\n        });\n      }\n    });\n  }\n\n  $('.gpnl-petitionform').each(function(){\n    var post_form_value = getFormObj(this);\n    var form_config = 'petition_form_object_' + post_form_value['form_id'];\n    this.tellerCode = window[form_config].analytics_campaign;\n    this.counter_min = Number(window[form_config].countermin);\n    this.counter_max = Number(window[form_config].countermax);\n    this.counter_text = window[form_config].countertext;\n    prefillByGuid('teller', this);\n  });\n\n  if ( !(istwitter || isfacebook)   ){\n    prefillByGuid('prefill', this);\n  }\n\n  function prefillByGuid(type, form){\n    var xmlhttp = new XMLHttpRequest();\n    var query_id = '';\n    var requestValue = '';\n    // waar gaat het om? Een teller of een prefill?\n    if (type === 'prefill'){\n      query_id = 'GET_FIRST_NAME_EMAIL';\n      requestValue = url_cg;\n    } else if (type === 'teller'){\n      query_id = 'CAMP_TTL_PETITIONS';\n      requestValue = form.tellerCode;\n    }\n    xmlhttp.open('POST', 'https://www.mygreenpeace.nl/GPN.WebServices/WIDSService.asmx', true);\n    // build SOAP request\n    var sr = '<'+'?'+'xml version=\"1.0\" encoding=\"utf-8\"?>' +\n    '<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">' +\n    '  <soap:Body>' +\n    '    <WatIsDestand xmlns=\"http://www.mygreenpeace.nl/GPN.WebServices/\">' +\n    '      <queryId>'+query_id+'</queryId>' +\n    '      <requestValue>'+requestValue+'</requestValue>' +\n    '    </WatIsDestand>' +\n    '  </soap:Body>' +\n    '</soap:Envelope>';\n\n    xmlhttp.onreadystatechange = function () {\n      if (xmlhttp.readyState === 4 && xmlhttp.status === 200){ // 200 = OK\n        var response = xmlhttp.responseXML.getElementsByTagName('WatIsDestandResult')[0].firstChild.nodeValue;\n        if (response!==''){\n          var res = response.split('|');\n          // waar gaat het om? Een teller of een prefill\n          if (type === 'prefill'){\n            var naam = res[0];\n            $(form).find('input[name=\\'name\\']').val(naam);\n            var email = res[1];\n            $(form).find('input[name=\\'mail\\']').val(email);\n          } else if (type === 'teller'){\n            showCounter(Number(res[0]), form);\n          }\n        }\n      }\n    };\n    // Send the POST request\n    xmlhttp.setRequestHeader('Content-Type', 'text/xml');\n    xmlhttp.setRequestHeader('SOAPAction', 'http://www.mygreenpeace.nl/GPN.WebServices/WatIsDestand');\n    xmlhttp.send(sr);\n    // send request\n  }\n\n  // TODO add language preference detection for better formatting of numbers\n  function showCounter(num_responses, form){\n    let formwrapper = form.parentNode;\n    if (num_responses >= form.counter_min){\n      $(formwrapper).find('.counter').show();\n      var perc_slider = Math.round(100 *(num_responses / form.counter_max));\n\n      if (num_responses >= form.counter_max) {\n        perc_slider = 100;\n      }\n\n      $(formwrapper).find('.counter__slider').animate({width: perc_slider+'%', opacity: 1}, 2000, 'easeInOutCubic');\n      $(formwrapper).find('.counter__gettext').html(num_responses.toLocaleString('nl-NL') +' '+form.counter_text);\n      $(formwrapper).find('.counter__text').fadeIn(2000);\n    }\n  }\n\n  //  try to get an response from whatsapp, else hide the whatsappbutton\n  //  ATM not working because ajax doesn't support custom schemes...\n  // TODO Find different way of determining whatsapp support\n  $.ajax({\n    type: 'HEAD',\n    url: 'whatsapp://send?text=text=Hello%20World!',\n    success: function() {\n      window.location='whatsapp://send?text=text=Hello%20World!';\n    },\n    error: function() {\n      $('.gpnl-share-whatsapp').toggle();\n    }\n  });\n});\n\nfunction getUrlVars(){\n  var vars = [], \n    hash;\n  var uri = window.location.href.split('#')[0];\n  var hashes = uri.slice(window.location.href.indexOf('?') + 1).split('&');\n  for(var i = 0; i < hashes.length; i++){\n    hash = hashes[i].split('=');\n    vars.push(hash[0]);\n    vars[hash[0]] = hash[1];\n  }\n  return vars;\n}\n\n// Get the key+value from the input fields in the form\nfunction getFormObj(el) {\n  var formObj = {};\n  var inputs = $(el).serializeArray();\n  $.each(inputs, function (i, input) {\n    formObj[input.name] = input.value;\n  });\n  return formObj;\n}\n"]}