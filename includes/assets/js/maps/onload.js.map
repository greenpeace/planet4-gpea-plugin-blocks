{"version":3,"sources":["onload.js"],"names":["getUrlVars","vars","hash","hashes","window","location","href","length","slice","split","indexOf","push","i","formObj","el","inputs","each","$","serializeArray","input","name","value","document","ready","opt","url_cg","referrer","isfacebook","clangct","xmlhttp","XMLHttpRequest","query_id","requestValue","type","form","tellerCode","open","sr","responseXML","onreadystatechange","naam","status","find","getElementsByTagName","firstChild","nodeValue","response","res","showCounter","val","email","num_responses","formwrapper","perc_slider","counter_min","show","Math","round","counter_max","width","opacity","fadeIn","html","toLocaleString","counter_text","Number","setRequestHeader","undefined","ajax","url","dataType","hide","prop","keyup","test","this","mail","encodeURIComponent","complete","data","responseText","includes","istwitter","prefillByGuid","form_config","getFormObj","analytics_campaign","countermin","countermax","countertext"],"mappings":"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","file":"../onload.js","sourcesContent":["$(document).ready(function() {\n\n  // Hide the consentbox if the opt=in url var is set. (this is for set for ie mailings)\n  var opt=getUrlVars()['opt'];\n  var url_cg = getUrlVars()['cg'];\n  var isfacebook = document.referrer.indexOf('facebook') !== -1;\n  var istwitter = document.referrer.indexOf('twitter') !== -1;\n\n  let clangct=getUrlVars()['clangct'];\n\n  if(clangct != undefined){\n    $.ajax({\n      url: '/wp-content/plugins/planet4-gpnl-plugin-blocks/includes/assets/js/clang-landing.js?clangct='+clangct,\n      dataType: 'script',\n    });\n  }\n\n  if(opt!= undefined && $('.optin').length != 0 && opt=='in'){\n    $('.optin').hide();\n    $('.gpnl-petition-checkbox').prop( 'checked', true );\n\n    // Here we check if we know the mail being entered if the opt=in var is set.\n    // If we don't know the entered mail we should display the consentbox\n    $( 'input[name=\\'mail\\']' ).keyup(function() {\n      // First loosely check if the value in the mailinput is indeed a mailadress, if it indeed is, we pass it onto the database checker\n      // eslint-disable-next-line\n      var mailRegex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n      if (mailRegex.test(this.value)) {\n        let mail = encodeURIComponent(this.value);\n        $.ajax({\n          type: 'GET',\n          url: 'https://secure.greenpeacephp.nl/kenikdeze.php?mail=' + mail,\n          complete: function(data) {\n            // If we do not know the email, we display the consentbox again\n            if (data.responseText.includes('false')) {\n              $('.optin').show();\n              $('.gpnl-petition-checkbox').prop( 'checked', false );\n            }\n          }\n        });\n      }\n    });\n\n    if ( !(istwitter || isfacebook)   ){\n      prefillByGuid('prefill', this);\n    }\n  }\n\n  $('.gpnl-petitionform').each(function(){\n    var post_form_value = getFormObj(this);\n    var form_config = 'petition_form_object_' + post_form_value['form_id'];\n    this.tellerCode = window[form_config].analytics_campaign;\n    this.counter_min = Number(window[form_config].countermin);\n    this.counter_max = Number(window[form_config].countermax);\n    this.counter_text = window[form_config].countertext;\n\n    prefillByGuid('teller', this);\n  });\n\n  function prefillByGuid(type, form){\n    var xmlhttp = new XMLHttpRequest();\n    var query_id = '';\n    var requestValue = '';\n    // waar gaat het om? Een teller of een prefill?\n    if (type === 'prefill'){\n      query_id = 'GET_FIRST_NAME_EMAIL';\n      requestValue = url_cg;\n    } else if (type === 'teller'){\n      query_id = 'CAMP_TTL_PETITIONS';\n      requestValue = form.tellerCode;\n    }\n    xmlhttp.open('POST', 'https://www.mygreenpeace.nl/GPN.WebServices/WIDSService.asmx', true);\n    // build SOAP request\n    var sr = '<'+'?'+'xml version=\"1.0\" encoding=\"utf-8\"?>' +\n    '<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">' +\n    '  <soap:Body>' +\n    '    <WatIsDestand xmlns=\"http://www.mygreenpeace.nl/GPN.WebServices/\">' +\n    '      <queryId>'+query_id+'</queryId>' +\n    '      <requestValue>'+requestValue+'</requestValue>' +\n    '    </WatIsDestand>' +\n    '  </soap:Body>' +\n    '</soap:Envelope>';\n\n    xmlhttp.onreadystatechange = function () {\n      if (xmlhttp.readyState === 4 && xmlhttp.status === 200){ // 200 = OK\n        var response = xmlhttp.responseXML.getElementsByTagName('WatIsDestandResult')[0].firstChild.nodeValue;\n        if (response!==''){\n          var res = response.split('|');\n          // waar gaat het om? Een teller of een prefill\n          if (type === 'prefill'){\n            var naam = res[0];\n            $(form).find('input[name=\\'name\\']').val(naam);\n            var email = res[1];\n            $(form).find('input[name=\\'mail\\']').val(email);\n          } else if (type === 'teller'){\n            showCounter(Number(res[0]), form);\n          }\n        }\n      }\n    };\n    // Send the POST request\n    xmlhttp.setRequestHeader('Content-Type', 'text/xml');\n    xmlhttp.setRequestHeader('SOAPAction', 'http://www.mygreenpeace.nl/GPN.WebServices/WatIsDestand');\n    xmlhttp.send(sr);\n    // send request\n  }\n\n  // TODO add language preference detection for better formatting of numbers\n  function showCounter(num_responses, form){\n    let formwrapper = form.parentNode;\n    if (num_responses >= form.counter_min){\n      $(formwrapper).find('.counter').show();\n      var perc_slider = Math.round(100 *(num_responses / form.counter_max));\n\n      if (num_responses >= form.counter_max) {\n        perc_slider = 100;\n      }\n\n      $(formwrapper).find('.counter__slider').animate({width: perc_slider+'%', opacity: 1}, 2000, 'easeInOutCubic');\n      $(formwrapper).find('.counter__gettext').html(num_responses.toLocaleString('nl-NL') +' '+form.counter_text);\n      $(formwrapper).find('.counter__text').fadeIn(2000);\n    }\n  }\n\n  //  try to get an response from whatsapp, else hide the whatsappbutton\n  //  ATM not working because ajax doesn't support custom schemes...\n  // TODO Find different way of determining whatsapp support\n  // $.ajax({\n  //   type: 'HEAD',\n  //   url: 'whatsapp://send?text=text=Hello%20World!',\n  //   success: function() {\n  //     // window.location='whatsapp://send?text=text=Hello%20World!';\n  //   },\n  //   error: function() {\n  //     $('.gpnl-share-whatsapp').toggle();\n  //   }\n  // });\n});\n\nfunction getUrlVars(){\n  var vars = [], \n    hash;\n  var uri = window.location.href.split('#')[0];\n  var hashes = uri.slice(window.location.href.indexOf('?') + 1).split('&');\n  for(var i = 0; i < hashes.length; i++){\n    hash = hashes[i].split('=');\n    vars.push(hash[0]);\n    vars[hash[0]] = hash[1];\n  }\n  return vars;\n}\n\n// Get the key+value from the input fields in the form\nfunction getFormObj(el) {\n  var formObj = {};\n  var inputs = $(el).serializeArray();\n  $.each(inputs, function (i, input) {\n    formObj[input.name] = input.value;\n  });\n  return formObj;\n}\n"]}